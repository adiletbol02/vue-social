{"version":3,"file":"js/177.43c54ede.js","mappings":"mSAgEA,MAAMA,GAAKC,EAAAA,EAAAA,MACLC,GAASC,EAAAA,EAAAA,MAETC,GAAQC,EAAAA,EAAAA,IAAI,IACZC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAaF,EAAAA,EAAAA,IAAI,MACjBG,GAAgBH,EAAAA,EAAAA,IAAI,MAEpBI,EAASC,UACbH,EAAWI,MAAQ,KACnBH,EAAcG,MAAQ,KAEtB,IACE,MAAMC,QAAuBC,EAAAA,EAAAA,KAC3BC,EAAAA,EAAAA,MACAV,EAAMO,MACNL,EAASK,OAELI,EAAOH,EAAeG,KAGtBC,GAAaC,EAAAA,EAAAA,IAAIjB,EAAI,QAASe,EAAKG,KACnCC,QAAoBC,EAAAA,EAAAA,IAAOJ,GAE7BG,EAAYE,SAEdN,EAAKO,QAAUH,EAAYI,OAAOD,QAGlCE,QAAQC,MAAM,wCAIhBvB,EAAOwB,KAAK,CAAEC,KAAM,QACtB,CAAE,MAAOF,GACPD,QAAQI,IAAI,wBAAyBH,EAAMI,MACxB,uBAAfJ,EAAMI,KACRtB,EAAWI,MAAQ,wBACK,wBAAfc,EAAMI,KACftB,EAAWI,MAAQ,wCACK,wBAAfc,EAAMI,KACfrB,EAAcG,MAAQ,uBAEtBa,QAAQC,MAAM,0BAA2BA,GACzCjB,EAAcG,MAAQ,8BAE1B,GAGImB,EAAmBpB,UACvB,MAAMqB,EAAW,IAAIC,EAAAA,GAErB,IACE,MAAMC,QAAeC,EAAAA,EAAAA,KAAgBpB,EAAAA,EAAAA,MAAWiB,GAC1ChB,EAAOkB,EAAOlB,KAEdC,GAAaC,EAAAA,EAAAA,IAAIjB,EAAI,QAASe,EAAKG,KACnCC,QAAoBC,EAAAA,EAAAA,IAAOJ,GAEjC,GAAKG,EAAYE,SAmBV,CAEL,MAAMc,EAAWhB,EAAYI,OAC7BR,EAAKO,QAAUa,EAASb,OAC1B,KAvB2B,CACzB,MAAMc,EAAcrB,EAAKqB,YAAcrB,EAAKqB,YAAcrB,EAAKX,YAEzDiC,EAAAA,EAAAA,IAAOrB,EAAY,CACvBoB,YAAaA,EACbE,IAAK,GACLC,SAAUxB,EAAKwB,SACfjB,SAAS,EACTlB,MAAOW,EAAKX,QAId,MAAMoC,QAAuBpB,EAAAA,EAAAA,IAAOJ,GAC9BmB,EAAWK,EAAejB,OAChCR,EAAKO,QAAUa,EAASb,cAElBe,EAAAA,EAAAA,KAAOpB,EAAAA,EAAAA,IAAIjB,EAAI,YAAae,EAAKqB,aAAc,CACnDlB,IAAKH,EAAKG,KAEd,CAMAhB,EAAOwB,KAAK,CAAEC,KAAM,QACtB,CAAE,MAAOF,GACPD,QAAQC,MAAM,wBAAyBA,GACvCgB,MAAM,iCAAmChB,EAAMiB,QACjD,GAGIC,EAAsBA,KAC1B,MAAMZ,EAAW,IAAIa,EAAAA,GAAc,kBAEnCV,EAAAA,EAAAA,KAAgBpB,EAAAA,EAAAA,MAAWiB,GACxBc,MAAKnC,UAEJ,MAAMK,EAAOkB,EAAOlB,KACpBS,QAAQI,IAAI,gCAAiCb,GAG7C,MAAMC,GAAaC,EAAAA,EAAAA,IAAIjB,EAAI,QAASe,EAAKG,KACnCC,QAAoBC,EAAAA,EAAAA,IAAOJ,GAE5BG,EAAYE,gBAETgB,EAAAA,EAAAA,IAAOrB,EAAY,CACvBoB,YAAarB,EAAKqB,YAClBE,IAAK,GACLhB,SAAS,IAKbpB,EAAOwB,KAAK,CAAEC,KAAM,QAAS,IAE9BmB,OAAOrB,IACND,QAAQC,MAAM,2BAA4BA,GAC1CgB,MAAM,oCAAsChB,EAAMiB,QAAQ,GAC1D,E,oiDCpLN,MAAMK,EAAc,EAEpB,O","sources":["webpack://vue-social/./src/views/SignInPage.vue","webpack://vue-social/./src/views/SignInPage.vue?c19f"],"sourcesContent":["<template>\r\n  <v-card class=\"mx-auto\" max-width=\"344\" title=\"Sign In\">\r\n    <v-container>\r\n      <v-text-field\r\n        v-model=\"email\"\r\n        color=\"primary\"\r\n        label=\"Email\"\r\n        variant=\"underlined\"\r\n        :error-messages=\"emailError\"\r\n      ></v-text-field>\r\n\r\n      <v-text-field\r\n        v-model=\"password\"\r\n        type=\"password\"\r\n        color=\"primary\"\r\n        label=\"Password\"\r\n        placeholder=\"Enter your password\"\r\n        variant=\"underlined\"\r\n        :error-messages=\"passwordError\"\r\n      ></v-text-field>\r\n    </v-container>\r\n\r\n    <v-divider></v-divider>\r\n\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"success\" @click=\"signIn\">\r\n        Sign In\r\n        <v-icon icon=\"mdi-chevron-right\" end></v-icon>\r\n      </v-btn>\r\n    </v-card-actions>\r\n\r\n    <div class=\"text-center mt-2\">\r\n      <router-link :to=\"{ name: 'Register' }\"\r\n        >Don't have an account? Register</router-link\r\n      >\r\n    </div>\r\n\r\n    <v-divider class=\"mt-4\"></v-divider>\r\n\r\n    <v-card-actions class=\"mt-4\">\r\n      <v-icon icon=\"mdi-google\"></v-icon>\r\n      <v-btn @click=\"signInWithGoogle\">Sign In with Google</v-btn>\r\n    </v-card-actions>\r\n\r\n    <v-card-actions>\r\n      <v-icon icon=\"mdi-microsoft\"></v-icon>\r\n      <v-btn @click=\"signInWithMicrosoft\">Sign In with Microsoft</v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  OAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\nconst db = getFirestore();\r\nconst router = useRouter();\r\n\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst emailError = ref(null);\r\nconst passwordError = ref(null);\r\n\r\nconst signIn = async () => {\r\n  emailError.value = null;\r\n  passwordError.value = null;\r\n\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(\r\n      getAuth(),\r\n      email.value,\r\n      password.value\r\n    );\r\n    const user = userCredential.user;\r\n\r\n    // Fetch user data from Firestore\r\n    const userDocRef = doc(db, \"users\", user.uid);\r\n    const userDocSnap = await getDoc(userDocRef);\r\n\r\n    if (userDocSnap.exists()) {\r\n      // Add isAdmin to the user object\r\n      user.isAdmin = userDocSnap.data().isAdmin;\r\n    } else {\r\n      // Handle the case where the user document doesn't exist\r\n      console.error(\"User document not found in Firestore\");\r\n      // You might want to sign the user out or handle this error appropriately\r\n    }\r\n\r\n    router.push({ name: \"Home\" });\r\n  } catch (error) {\r\n    console.log(\"Error during sign in:\", error.code);\r\n    if (error.code === \"auth/invalid-email\") {\r\n      emailError.value = \"Invalid email format.\";\r\n    } else if (error.code === \"auth/user-not-found\") {\r\n      emailError.value = \"No account with that email was found.\";\r\n    } else if (error.code === \"auth/wrong-password\") {\r\n      passwordError.value = \"Incorrect password.\";\r\n    } else {\r\n      console.error(\"Firebase sign-in error:\", error);\r\n      passwordError.value = \"Incorrect email or password\";\r\n    }\r\n  }\r\n};\r\n\r\nconst signInWithGoogle = async () => {\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  try {\r\n    const result = await signInWithPopup(getAuth(), provider);\r\n    const user = result.user;\r\n\r\n    const userDocRef = doc(db, \"users\", user.uid);\r\n    const userDocSnap = await getDoc(userDocRef);\r\n\r\n    if (!userDocSnap.exists()) {\r\n      const displayName = user.displayName ? user.displayName : user.email;\r\n\r\n      await setDoc(userDocRef, {\r\n        displayName: displayName,\r\n        bio: \"\",\r\n        photoURL: user.photoURL,\r\n        isAdmin: false,\r\n        email: user.email,\r\n        //TODO: email: gmail, in signin too, and microsoft\r\n      });\r\n\r\n      const newUserDocSnap = await getDoc(userDocRef);\r\n      const userData = newUserDocSnap.data();\r\n      user.isAdmin = userData.isAdmin;\r\n\r\n      await setDoc(doc(db, \"usernames\", user.displayName), {\r\n        uid: user.uid,\r\n      });\r\n    } else {\r\n      // User already exists, so just fetch the isAdmin value\r\n      const userData = userDocSnap.data();\r\n      user.isAdmin = userData.isAdmin;\r\n    }\r\n\r\n    router.push({ name: \"Home\" });\r\n  } catch (error) {\r\n    console.error(\"Google sign-up error:\", error);\r\n    alert(\"Error signing up with Google: \" + error.message);\r\n  }\r\n};\r\n\r\nconst signInWithMicrosoft = () => {\r\n  const provider = new OAuthProvider(\"microsoft.com\");\r\n\r\n  signInWithPopup(getAuth(), provider)\r\n    .then(async (result) => {\r\n      // Notice the 'async' keyword\r\n      const user = result.user;\r\n      console.log(\"Microsoft sign-in successful:\", user);\r\n\r\n      // Database interaction (similar to Google sign-in)\r\n      const userDocRef = doc(db, \"users\", user.uid);\r\n      const userDocSnap = await getDoc(userDocRef);\r\n\r\n      if (!userDocSnap.exists()) {\r\n        // Adapt this to store the desired Microsoft user data\r\n        await setDoc(userDocRef, {\r\n          displayName: user.displayName,\r\n          bio: \"\",\r\n          isAdmin: false,\r\n          // Add other relevant fields from 'user' (e.g., photoURL if available)\r\n        });\r\n      }\r\n\r\n      router.push({ name: \"Home\" });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Microsoft sign-in error:\", error);\r\n      alert(\"Error signing in with Microsoft: \" + error.message);\r\n    });\r\n};\r\n</script>\r\n","import script from \"./SignInPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SignInPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["db","getFirestore","router","useRouter","email","ref","password","emailError","passwordError","signIn","async","value","userCredential","signInWithEmailAndPassword","getAuth","user","userDocRef","doc","uid","userDocSnap","getDoc","exists","isAdmin","data","console","error","push","name","log","code","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","userData","displayName","setDoc","bio","photoURL","newUserDocSnap","alert","message","signInWithMicrosoft","OAuthProvider","then","catch","__exports__"],"sourceRoot":""}