{"version":3,"file":"js/169.72f28fba.js","mappings":"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","sources":["webpack://vue-social/./src/views/RegisterPage.vue","webpack://vue-social/./src/views/RegisterPage.vue?5906"],"sourcesContent":["<template>\r\n  <v-card class=\"mx-auto\" max-width=\"344\" title=\"User Registration\">\r\n    <v-container>\r\n      <v-text-field\r\n        v-model=\"email\"\r\n        color=\"primary\"\r\n        label=\"Email\"\r\n        :error-messages=\"emailError\"\r\n        variant=\"underlined\"\r\n      ></v-text-field>\r\n\r\n      <v-text-field\r\n        v-model=\"password\"\r\n        type=\"password\"\r\n        color=\"primary\"\r\n        label=\"Password\"\r\n        placeholder=\"Enter your password\"\r\n        variant=\"underlined\"\r\n        :error-messages=\"passwordError\"\r\n      ></v-text-field>\r\n\r\n      <v-text-field\r\n        v-model=\"username\"\r\n        color=\"primary\"\r\n        label=\"Username\"\r\n        :error-messages=\"usernameError\"\r\n        variant=\"underlined\"\r\n      ></v-text-field>\r\n    </v-container>\r\n\r\n    <v-divider></v-divider>\r\n\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"success\" :loading=\"loading\" @click=\"register\">\r\n        Complete Registration\r\n        <v-icon icon=\"mdi-chevron-right\" end></v-icon>\r\n      </v-btn>\r\n    </v-card-actions>\r\n\r\n    <div class=\"text-center mt-2\">\r\n      <router-link :to=\"{ name: 'SignIn' }\"\r\n        >Already have an account? Sign in</router-link\r\n      >\r\n    </div>\r\n\r\n    <v-divider class=\"mt-4\"></v-divider>\r\n\r\n    <v-card-actions class=\"mt-4\">\r\n      <v-icon icon=\"mdi-google\"></v-icon>\r\n      <v-btn @click=\"signInWithGoogle\">Sign Up with Google</v-btn>\r\n    </v-card-actions>\r\n\r\n    <v-card-actions>\r\n      <v-icon icon=\"mdi-microsoft\"></v-icon>\r\n      <v-btn @click=\"signInWithMicrosoft\">Sign Up with Microsoft</v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  OAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst db = getFirestore();\r\nconst auth = getAuth();\r\nconst router = useRouter();\r\n\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst username = ref(\"\");\r\nconst loading = ref(false);\r\nconst emailError = ref(null);\r\nconst passwordError = ref(null);\r\nconst usernameError = ref(null);\r\n\r\nconst register = async () => {\r\n  emailError.value = null;\r\n  passwordError.value = null;\r\n  usernameError.value = null;\r\n  loading.value = true;\r\n\r\n  try {\r\n    const usernameDocRef = doc(db, \"usernames\", username.value);\r\n    const usernameDocSnap = await getDoc(usernameDocRef);\r\n\r\n    if (usernameDocSnap.exists()) {\r\n      usernameError.value = \"Username is already taken.\";\r\n      loading.value = false;\r\n      return;\r\n    }\r\n\r\n    const userCredential = await createUserWithEmailAndPassword(\r\n      auth,\r\n      email.value,\r\n      password.value\r\n    );\r\n    const user = userCredential.user;\r\n\r\n    await updateProfile(user, {\r\n      displayName: username.value,\r\n    });\r\n\r\n    await setDoc(doc(db, \"users\", user.uid), {\r\n      displayName: username.value,\r\n      email: email.value,\r\n      bio: \"\",\r\n      photoURL: null,\r\n      isAdmin: false,\r\n    });\r\n\r\n    await setDoc(usernameDocRef, {\r\n      uid: user.uid,\r\n    });\r\n\r\n    router.push({ name: \"Home\" });\r\n  } catch (error) {\r\n    if (error.code === \"auth/email-already-in-use\") {\r\n      emailError.value = \"Email is already in use.\";\r\n    } else if (error.code === \"auth/invalid-email\") {\r\n      emailError.value = \"Invalid email format.\";\r\n    } else if (error.code === \"auth/weak-password\") {\r\n      passwordError.value = \"Password is too weak.\";\r\n    } else {\r\n      alert(\"Error registering: \" + error.message);\r\n    }\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst signInWithGoogle = async () => {\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  try {\r\n    const result = await signInWithPopup(getAuth(), provider);\r\n    const user = result.user;\r\n\r\n    const userDocRef = doc(db, \"users\", user.uid);\r\n    const userDocSnap = await getDoc(userDocRef);\r\n\r\n    if (!userDocSnap.exists()) {\r\n      const displayName = user.displayName ? user.displayName : user.email;\r\n\r\n      await setDoc(userDocRef, {\r\n        displayName: displayName,\r\n        bio: \"\",\r\n        photoURL: user.photoURL,\r\n        isAdmin: false,\r\n        email: user.email,\r\n        //TODO: email: gmail, in signin too, and microsoft\r\n      });\r\n\r\n      const newUserDocSnap = await getDoc(userDocRef);\r\n      const userData = newUserDocSnap.data();\r\n      user.isAdmin = userData.isAdmin;\r\n\r\n      await setDoc(doc(db, \"usernames\", user.displayName), {\r\n        uid: user.uid,\r\n      });\r\n    } else {\r\n      // User already exists, so just fetch the isAdmin value\r\n      const userData = userDocSnap.data();\r\n      user.isAdmin = userData.isAdmin;\r\n    }\r\n\r\n    router.push({ name: \"Home\" });\r\n  } catch (error) {\r\n    console.error(\"Google sign-up error:\", error);\r\n    alert(\"Error signing up with Google: \" + error.message);\r\n  }\r\n};\r\n\r\nconst signInWithMicrosoft = () => {\r\n  const provider = new OAuthProvider(\"microsoft.com\");\r\n\r\n  signInWithPopup(getAuth(), provider)\r\n    .then(async (result) => {\r\n      // Notice the 'async' keyword\r\n      const user = result.user;\r\n      console.log(\"Microsoft sign-in successful:\", user);\r\n\r\n      // Database interaction (similar to Google sign-in)\r\n      const userDocRef = doc(db, \"users\", user.uid);\r\n      const userDocSnap = await getDoc(userDocRef);\r\n\r\n      if (!userDocSnap.exists()) {\r\n        // Adapt this to store the desired Microsoft user data\r\n        await setDoc(userDocRef, {\r\n          displayName: user.displayName,\r\n          bio: \"\",\r\n          isAdmin: false,\r\n          // Add other relevant fields from 'user' (e.g., photoURL if available)\r\n        });\r\n      }\r\n\r\n      const userData = userDocSnap.data();\r\n      user.isAdmin = userData.isAdmin; // Add isAdmin to the user object\r\n\r\n      router.push({ name: \"Home\" });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Microsoft sign-in error:\", error);\r\n      alert(\"Error signing in with Microsoft: \" + error.message);\r\n    });\r\n};\r\n</script>\r\n","import script from \"./RegisterPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["db","getFirestore","auth","getAuth","router","useRouter","email","ref","password","username","loading","emailError","passwordError","usernameError","register","async","value","usernameDocRef","doc","usernameDocSnap","getDoc","exists","userCredential","createUserWithEmailAndPassword","user","updateProfile","displayName","setDoc","uid","bio","photoURL","isAdmin","push","name","error","code","alert","message","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","userDocRef","userDocSnap","userData","data","newUserDocSnap","console","signInWithMicrosoft","OAuthProvider","then","log","catch","__exports__"],"sourceRoot":""}